@model KE03_INTDEV_SE_2_Base.Models.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid py-4">
    <!-- Header -->
    <div class="mb-4">
        <h1 class="h3 text-gray-800 fw-bold">Dashboard Overview</h1>
        <p class="text-muted">Welcome to Matrix Inc. Management System</p>
    </div>

    <!-- Statistics Cards Row -->
    <div class="row g-4 mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary bg-gradient text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-uppercase mb-2">Total Products</h6>
                            <h2 class="mb-0 fw-bold">@Model.TotalProducts</h2>
                        </div>
                        <div class="rounded-circle bg-white bg-opacity-25 p-3">
                            <i class="bi bi-box text-white h4 mb-0"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-success bg-gradient text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-uppercase mb-2">Total Customers</h6>
                            <h2 class="mb-0 fw-bold">@Model.TotalCustomers</h2>
                        </div>
                        <div class="rounded-circle bg-white bg-opacity-25 p-3">
                            <i class="bi bi-people text-white h4 mb-0"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-info bg-gradient text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-uppercase mb-2">Total Orders</h6>
                            <h2 class="mb-0 fw-bold">@Model.TotalOrders</h2>
                        </div>
                        <div class="rounded-circle bg-white bg-opacity-25 p-3">
                            <i class="bi bi-cart text-white h4 mb-0"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-warning bg-gradient text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-uppercase mb-2">Average Value</h6>
                            <h2 class="mb-0 fw-bold">â‚¬@Model.AverageOrderValue.ToString("N2")</h2>
                        </div>
                        <div class="rounded-circle bg-white bg-opacity-25 p-3">
                            <i class="bi bi-currency-euro text-white h4 mb-0"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row g-4 mb-4">
        <!-- Orders Timeline Chart -->
        <div class="col-xl-8">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-white py-3">
                    <h5 class="card-title mb-0 fw-bold">Orders Timeline</h5>
                </div>
                <div class="card-body">
                    <canvas id="ordersTimelineChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Products by Category Doughnut Chart -->
        <div class="col-xl-4">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-white py-3">
                    <h5 class="card-title mb-0 fw-bold">Products by Category</h5>
                </div>
                <div class="card-body">
                    <canvas id="categoryChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Second Row -->
    <div class="row g-4">
        <!-- Top Products Chart -->
        <div class="col-xl-6">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-white py-3">
                    <h5 class="card-title mb-0 fw-bold">Top Products by Price</h5>
                </div>
                <div class="card-body">
                    <canvas id="topProductsChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Recent Orders Table -->
        <div class="col-xl-6">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-white py-3">
                    <h5 class="card-title mb-0 fw-bold">Recent Orders</h5>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="bg-light">
                                <tr>
                                    <th class="border-0">Order ID</th>
                                    <th class="border-0">Customer</th>
                                    <th class="border-0">Date</th>
                                    <th class="border-0">Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in Model.RecentOrders)
                                {
                                    <tr>
                                        <td class="align-middle">#@order.Id</td>
                                        <td class="align-middle">
                                            <div class="d-flex align-items-center">
                                                <div class="bg-light rounded-circle p-2 me-2">
                                                    <i class="bi bi-person text-secondary"></i>
                                                </div>
                                                <span>@order.Customer.Name</span>
                                            </div>
                                        </td>
                                        <td class="align-middle">@order.OrderDate.ToShortDateString()</td>
                                        <td class="align-middle">
                                            <span class="badge bg-success rounded-pill px-3">Completed</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Set default Chart.js options for all charts
        Chart.defaults.font.family = "'Inter', 'Helvetica', 'Arial', sans-serif";
        Chart.defaults.color = '#6c757d';
        Chart.defaults.plugins.legend.position = 'bottom';

        // Products by Category Chart
        const categoryData = {
            labels: [@Html.Raw(string.Join(",", Model.ProductsByCategory.Select(c => $"'{c.Category}'")))],
            datasets: [{
                data: [@string.Join(",", Model.ProductsByCategory.Select(c => c.Count))],
                backgroundColor: [
                    'rgba(78, 115, 223, 0.8)',
                    'rgba(28, 200, 138, 0.8)',
                    'rgba(54, 185, 204, 0.8)',
                    'rgba(246, 194, 62, 0.8)',
                    'rgba(231, 74, 59, 0.8)'
                ],
                borderWidth: 0
            }]
        };

        new Chart(document.getElementById('categoryChart'), {
            type: 'doughnut',
            data: categoryData,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                cutout: '70%',
                plugins: {
                    legend: {
                        display: true,
                        position: 'bottom'
                    }
                }
            }
        });

        // Orders Timeline Chart
        const timelineData = {
            labels: [@Html.Raw(string.Join(",", Model.OrdersTimeline.Select(o => $"'{o.Date.ToString("MMM dd")}'")))],
            datasets: [{
                label: 'Orders',
                data: [@string.Join(",", Model.OrdersTimeline.Select(o => o.Count))],
                borderColor: 'rgba(78, 115, 223, 1)',
                backgroundColor: 'rgba(78, 115, 223, 0.1)',
                tension: 0.4,
                fill: true,
                pointBackgroundColor: 'rgba(78, 115, 223, 1)',
                pointBorderColor: '#fff',
                pointBorderWidth: 2,
                pointRadius: 4
            }]
        };

        new Chart(document.getElementById('ordersTimelineChart'), {
            type: 'line',
            data: timelineData,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            borderDash: [2],
                            drawBorder: false
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });

        // Top Products Chart
        const productsData = {
            labels: [@Html.Raw(string.Join(",", Model.TopProducts.Select(p => $"'{p.Name}'")))],
            datasets: [{
                label: 'Price (â‚¬)',
                data: [@string.Join(",", Model.TopProducts.Select(p => p.Price))],
                backgroundColor: 'rgba(28, 200, 138, 0.8)',
                borderRadius: 4,
                maxBarThickness: 32
            }]
        };

        new Chart(document.getElementById('topProductsChart'), {
            type: 'bar',
            data: productsData,
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            borderDash: [2],
                            drawBorder: false
                        },
                        ticks: {
                            callback: function(value) {
                                return 'â‚¬' + value;
                            }
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });
    </script>
} 