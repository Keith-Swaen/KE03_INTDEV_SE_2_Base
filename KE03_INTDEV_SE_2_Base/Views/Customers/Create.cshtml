@model DataAccessLayer.Models.Customer

@{
    ViewData["Title"] = "Nieuwe Klant";
}

<div class="container-fluid py-4">
    <div class="card shadow-sm" style="max-width:600px; margin:0 auto;">
        <div class="card-header bg-primary text-white">
            <h3 class="card-title mb-0"><i class="fas fa-plus me-2"></i>Nieuwe Klant</h3>
        </div>
        <div class="card-body">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                <div class="form-group mb-3">
                    <label asp-for="Name" class="control-label">Naam</label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="Address" class="control-label">Adres</label>
                    <input asp-for="Address" class="form-control" />
                    <span asp-validation-for="Address" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="Active" class="form-label">Actief</label>
                    <div class="form-check form-switch">
                        <input asp-for="Active" class="form-check-input" type="checkbox" id="activeSwitch" />
                        <label class="form-check-label" for="activeSwitch">
                            <span id="activeStatusLabel" class="text-success">Actief</span>
                        </label>
                    </div>
                    <span asp-validation-for="Active" class="text-danger"></span>
                </div>
                <div class="form-group d-flex gap-2">
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-save"></i> Aanmaken
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Terug naar overzicht
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Haal de switch en het label op
        const activeSwitch = document.getElementById('activeSwitch');
        const statusLabel = document.getElementById('activeStatusLabel');
        // Functie om het label aan te passen op basis van de switch
        function updateStatusLabel() {
            if (activeSwitch.checked) {
                statusLabel.textContent = 'Actief';
                statusLabel.className = 'text-success';
            } else {
                statusLabel.textContent = 'Inactief';
                statusLabel.className = 'text-secondary';
            }
        }
        // Event listener voor het wisselen van de switch
        activeSwitch.addEventListener('change', updateStatusLabel);
        // Initialiseer het label bij laden van de pagina
        updateStatusLabel();
    </script>
    // Voegt de validatie-scripts toe zodat client-side validatie werkt, zoals foutmeldingen bij invullen formulier
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
