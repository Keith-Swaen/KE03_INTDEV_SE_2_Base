@model IEnumerable<DataAccessLayer.Models.Customer>

@{
    ViewData["Title"] = "Klanten";
}

<div class="container-fluid py-4">
    <h1 class="h3 text-gray-800 mb-3">
        <i class="fas fa-users me-2"></i>Klantenoverzicht
    </h1>
    <small class="text-muted mb-4 d-block">Beheer hier al uw klanten en hun status</small>

    <div class="d-flex gap-2 mb-3 flex-wrap">
        <a asp-action="Index" asp-route-showInactive="@(!ViewBag.ShowInactive)" 
           class="btn btn-outline-secondary btn-sm d-flex align-items-center"
           style="max-width: 180px; white-space: nowrap;">
            <i class="fas fa-eye me-1"></i>
            @(ViewBag.ShowInactive ? "Verberg inactieve klanten" : "Toon inactieve klanten")
        </a>
        <a asp-action="Create" class="btn btn-primary btn-sm d-flex align-items-center"
           style="max-width: 140px; white-space: nowrap;">
            <i class="fas fa-plus me-1"></i>Nieuwe klant
        </a>
    </div>

    <div id="gridjs-search-wrapper" class="mb-3"></div>

    <div id="klanten-grid" class="mt-3"></div>
</div>

@section Scripts {
    <script src="https://unpkg.com/gridjs/dist/gridjs.umd.js"></script>

    <script>
        const grid = new gridjs.Grid({
            columns: [
                "Naam",
                "Adres",
                {
                    name: "Status",
                    sort: true,
                    formatter: (cel) => {
                        if (cel === true || cel === "true" || cel === 1) {
                            return gridjs.html("<span class='badge bg-primary'>Actief</span>");
                        } else {
                            return gridjs.html("<span class='badge bg-danger'>Inactief</span>");
                        }
                    }
                },
                {
                    name: "Acties",
                    sort: false,
                    search: false,
                    formatter: (cel) => gridjs.html(cel)
                }
            ],
            data: [
                @foreach (var klant in Model)
                {
                    <text>[ 
                        "@klant.Name",
                        "@klant.Address",
                        @(klant.Active ? "true" : "false"),
                        `@Html.Raw($@"<a href='/Customers/Edit/{klant.Id}' class='btn btn-sm btn-outline-warning me-1' title='Bewerken'><i class='fas fa-edit'></i></a>
                                      <a href='/Customers/Details/{klant.Id}' class='btn btn-sm btn-outline-info me-1' title='Details'><i class='fas fa-info-circle'></i></a>
                                      <a href='/Customers/Delete/{klant.Id}' class='btn btn-sm btn-outline-danger' title='Deactiveren'><i class='fas fa-trash'></i></a>")`
                    ],</text>
                }
            ],
            pagination: {
                limit: 10
            },
            search: {
                placeholder: 'Typ hier om te zoeken...'
            },
            sort: true,
            language: {
                search: {
                    placeholder: 'Typ hier om te zoeken...'
                },
                pagination: {
                    previous: 'Vorige',
                    next: 'Volgende',
                    showing: 'Toont',
                    of: 'van',
                    results: () => 'resultaten'
                },
                loading: 'Laden...',
                noRecordsFound: 'Geen resultaten gevonden'
            },
            className: {
                table: 'table table-striped table-hover mb-0',
                thead: 'table-light',
                th: 'fw-bold'
            },
            style: {
                th: { 'text-align': 'left' },
                td: { 'text-align': 'left' }
            }
        });

        grid.render(document.getElementById("klanten-grid")).then(() => {
            const gridContainer = document.querySelector("#klanten-grid");
            const searchBar = gridContainer.querySelector(".gridjs-search");
            const searchWrapper = document.getElementById("gridjs-search-wrapper");
            if (searchBar && searchWrapper) {
                searchWrapper.appendChild(searchBar);
            }
        });
    </script>
}
